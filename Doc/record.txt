[2016-10-17]:加入了json协议
[2016-10-10]:优化等级导致BOOT无法跳转到APP
[2016-06-20]:一个奇葩的错误
const char *BoolString[2]={"False","True "};BoolString[1]指针指向的居然是r
改成这样似乎没问题const char BoolString[2][6]={"False","True "};
[2016-06-14]:重构了系统定时器，更节约系统资源更方便使用
[2016-06-13]:介于诸多莫名其妙的问题，又把编译器降级到MDK4.72A
[2016-06-01]:编译环境升级到MDK5.16a
[2016-05-22]:驱动IO端口使用结构体传参初始化，灵活性更高，驱动可重复使用动态变更位置
[2016-05-17]:去掉一些依赖，增强可移植性
[2016-04-27]:DeBug使用动态内存分配缓冲区
[2016-04-22]:联通无法通过PDU方式发送短信，需要获取短信中心号码
[2016-03-12]:串口一突然进入死循环了
在整理串口通用处理程序时不小心初始化到apb1时钟
[2015-11-09]:对任务状态重新划分了
[2015-11-05]:更新了TGUI_GBK_Driver.c中文本显示行数控制
[2015-11-03]:系统内核增加任务ID自动分配和任务名索引
[2015-11-03]:内存管理发现BUG
在内存片段中申请内存是出现问题
[2015-10-27]:实现了任务动态删除内存回收
[2015-09-14]:对包括系统任务表设备表等的本体使用动态内存分配
[2015-09-14]:更改了动态内存使用到任务堆栈和串口缓冲
[2015-09-14]:新增动态内存分配
[2015-09-10]:新增半字库中英选择输入法
[2015-09-05]:新增了Web人机交互界面
[2015-09-03]:移植了Net驱动
能通过Web接口访问控制页面，打开关闭板子LED
[2015-09-02]:发现了关于RCC_APB2Periph_AFIO的问题>>>
在对IO端口进行配置之前需要开启IO交互时钟RCC_APB2Periph_AFIO
[2015-09-02]:修改了设备属性归类
重新定义了设备属性为组设备、普通设备、IO清单设备
[2015-09-02]:编写了2.4G ZigBee模块驱动>>>
位于Prafire子工程目录下
[2015-07-28]:增强了串口1、2BOOTLoader>>>
[2015-07-28]:删除了串口2驱动>>>
所有后续及修改工程需要公用串口驱动
[2015-07-26]:升级了掉电数据保存方式>>>
分区保存配置参数，参数完整性校验
[2015-07-26]:升级了程序应用掉电数据驱动>>>
方便应用存放配置数据 
[2015-07-26]:设备初始化改到空闲任务开始>>>
设备初始化在系统运行之前会出现位置fsmc错误，表现为液晶屏刷屏不确定慢
[2015-07-26]:升级了配置项>>>
调整配置各工程产生的中间文件将放在各工程文件目录内Obj文件夹中
[2015-07-26]:升级了系统公共驱动目录>>>
删除了专用驱动，专用驱动将在工程main函数所在文件首部包含
[2015-07-25]:升级了 串口公共驱动>>>
添加文件.Usart_Driver.c
[2015-04-19]:升级了库函数>>>
从2.4升级到2.5
[2015-04-18]:修改了结构>>>
在配置configs.h文件里内置了配置ini文件
[2015-03-03]:
[2015-02-24]:历史遗留的BUG>>>
在做SD卡文件系统实验时发现打印在液晶屏上的字符变为乱码，查到底是TGUI_GBK_Driver.c驱动文件英文字符打印取模指针变量长度为uint16改为uint32 问题排除
[2015-01-23]:激动万分
初次使用以前写好的canbus协议，有点看不懂，但很快就掌握怎么使用了
[2014-12-09]:修改结构>>>
实现驱动的模块化添加
[2014-11-30]:添加驱动>>>
ADC驱动、DAC驱动、温度驱动、PWM驱动、定时器驱动
[2014-11-27]:野火教程>>>
新增基于库操作的spi驱动
[2014-11-27]:更细中>>>
>>>删除了一个之前修改串口驱动导致液晶屏刷屏几乎卡死的BUG
[2014-11-26]:开始偶尔记录>>>
>>>修改了程序目录结构，去掉了User目录，应用目录重新规定为App_Xxxxx
[2013-09-21]:修改了内核集成了设备管理功能
[2013-09-01]:实现了设备管理信号互斥机制
[2013-08-12]:实现了简单的两个任务来回切换执行
[2013-08-11]:参考了wanlix操作系统的核心任务切换部分

